execute_process(COMMAND ${ILC} front basic -emit-il ${SRC_DIR}/docs/examples/basic/ex1_hello_cond.bas
                OUTPUT_FILE basic.il RESULT_VARIABLE r1)
if(NOT r1 EQUAL 0)
  message(FATAL_ERROR "emit-il failed")
endif()
file(READ basic.il IL_OUT)
string(REGEX MATCH "HELLO" _il1 "${IL_OUT}")
if(NOT _il1)
  message(FATAL_ERROR "missing HELLO in IL output")
endif()

execute_process(COMMAND ${ILC} front basic -run ${SRC_DIR}/docs/examples/basic/ex1_hello_cond.bas
                OUTPUT_FILE run.txt RESULT_VARIABLE r2)
if(NOT r2 EQUAL 0)
  message(FATAL_ERROR "execution failed")
endif()
file(READ run.txt R1)
string(REGEX MATCH "HELLO" _m1 "${R1}")
if(NOT _m1)
  message(FATAL_ERROR "missing HELLO")
endif()
string(REGEX MATCH "READY" _m2 "${R1}")
if(NOT _m2)
  message(FATAL_ERROR "missing READY")
endif()
string(REGEX MATCHALL "[0-9]+" nums "${R1}")
list(LENGTH nums n)
if(NOT n EQUAL 2)
  message(FATAL_ERROR "expected two integers in output")
endif()

execute_process(COMMAND ${ILC} front basic -run ${SRC_DIR}/docs/examples/basic/ex2_sum_1_to_10.bas
                OUTPUT_FILE run2.txt RESULT_VARIABLE r3)
if(NOT r3 EQUAL 0)
  message(FATAL_ERROR "execution ex2 failed")
endif()
file(READ run2.txt R2)
string(REGEX MATCH "SUM" _s1 "${R2}")
if(NOT _s1)
  message(FATAL_ERROR "missing SUM")
endif()
string(REGEX MATCH "DONE" _s2 "${R2}")
if(NOT _s2)
  message(FATAL_ERROR "missing DONE")
endif()
string(REGEX MATCH "45" _s3 "${R2}")
if(NOT _s3)
  message(FATAL_ERROR "missing 45")
endif()

# test PRINT with commas
execute_process(COMMAND ${ILC} front basic -run ${SRC_DIR}/docs/examples/basic/ex_print_commas.bas
                OUTPUT_FILE run_commas.txt RESULT_VARIABLE rc)
if(NOT rc EQUAL 0)
  message(FATAL_ERROR "execution print_commas failed")
endif()
file(READ run_commas.txt RC)
if(NOT RC STREQUAL "A 1 B\n")
  message(FATAL_ERROR "unexpected print_commas output: ${RC}")
endif()

# test PRINT with semicolons
execute_process(COMMAND ${ILC} front basic -run ${SRC_DIR}/docs/examples/basic/ex_print_semicolons.bas
                OUTPUT_FILE run_semicolons.txt RESULT_VARIABLE rs)
if(NOT rs EQUAL 0)
  message(FATAL_ERROR "execution print_semicolons failed")
endif()
file(READ run_semicolons.txt RS)
if(NOT RS STREQUAL "A1B\n")
  message(FATAL_ERROR "unexpected print_semicolons output: ${RS}")
endif()

# test INPUT string echo
execute_process(COMMAND ${ILC} front basic -run ${SRC_DIR}/docs/examples/basic/ex5_input_echo.bas --stdin-from ${SRC_DIR}/tests/data/input1.txt
                OUTPUT_FILE run3.txt RESULT_VARIABLE r4)
if(NOT r4 EQUAL 0)
  message(FATAL_ERROR "execution ex5 failed")
endif()
file(READ run3.txt R3)
string(REGEX MATCH "hello world" _e1 "${R3}")
if(NOT _e1)
  message(FATAL_ERROR "missing echoed input")
endif()

# test integer INPUT addition
set(tmp_bas "${CMAKE_BINARY_DIR}/input_add.bas")
file(WRITE ${tmp_bas} "10 INPUT A\n20 INPUT B\n30 PRINT A + B\n")
set(tmp_in "${CMAKE_BINARY_DIR}/input_nums.txt")
file(WRITE ${tmp_in} "3\n4\n")
execute_process(COMMAND ${ILC} front basic -run ${tmp_bas} --stdin-from ${tmp_in}
                OUTPUT_FILE run4.txt RESULT_VARIABLE r5)
if(NOT r5 EQUAL 0)
  message(FATAL_ERROR "execution add failed")
endif()
file(READ run4.txt R4)
string(REGEX MATCH "7" _n1 "${R4}")
if(NOT _n1)
  message(FATAL_ERROR "missing numeric sum")
endif()

# test array DIM and element access
set(tmp_arr_in "${CMAKE_BINARY_DIR}/array_n.txt")
file(WRITE ${tmp_arr_in} "5\n")
execute_process(COMMAND ${ILC} front basic -run ${SRC_DIR}/docs/examples/basic/ex6_array_sum.bas --stdin-from ${tmp_arr_in}
                OUTPUT_FILE run5.txt RESULT_VARIABLE r6)
if(NOT r6 EQUAL 0)
  message(FATAL_ERROR "execution ex6 failed")
endif()
file(READ run5.txt R5)
string(REGEX MATCH "30" _n2 "${R5}")
if(NOT _n2)
  message(FATAL_ERROR "missing array sum")
endif()
