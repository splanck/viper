# File: tests/basic/semantics/check_run.cmake
# Purpose: Execute BASIC program and validate stdout/stderr against expectations.
if(NOT DEFINED ILC)
  message(FATAL_ERROR "ILC not set")
endif()
if(NOT DEFINED BAS_FILE)
  message(FATAL_ERROR "BAS_FILE not set")
endif()
set(_cmd ${ILC} front basic -run ${BAS_FILE})
if(DEFINED STDIN_FILE)
  list(APPEND _cmd --stdin-from ${STDIN_FILE})
endif()
execute_process(
  COMMAND ${_cmd}
  RESULT_VARIABLE RES
  OUTPUT_VARIABLE OUT
  ERROR_VARIABLE ERR)
if(NOT DEFINED EXPECT_STATUS)
  set(EXPECT_STATUS 0)
endif()
if(NOT RES EQUAL EXPECT_STATUS)
  message(FATAL_ERROR "unexpected exit status: expected ${EXPECT_STATUS}, got ${RES}. stderr: ${ERR}")
endif()
string(REPLACE "\r\n" "\n" OUT "${OUT}")
string(REGEX REPLACE "\n+$" "" OUT "${OUT}")
string(REPLACE "\r\n" "\n" ERR "${ERR}")
string(REGEX REPLACE "\n+$" "" ERR "${ERR}")
if(DEFINED EXPECT_FILE)
  file(READ ${EXPECT_FILE} EXPECT_CONTENT)
  string(REPLACE "\r\n" "\n" EXPECT_CONTENT "${EXPECT_CONTENT}")
  string(REGEX REPLACE "\n+$" "" EXPECT_CONTENT "${EXPECT_CONTENT}")
  if(NOT OUT STREQUAL EXPECT_CONTENT)
    message(FATAL_ERROR "stdout mismatch\\nexpected: '${EXPECT_CONTENT}'\\nactual: '${OUT}'")
  endif()
elseif(NOT OUT STREQUAL "")
  message(FATAL_ERROR "unexpected stdout: '${OUT}'")
endif()
if(DEFINED STDERR_FILE)
  file(READ ${STDERR_FILE} EXPECT_ERR)
  string(REPLACE "\r\n" "\n" EXPECT_ERR "${EXPECT_ERR}")
  string(REGEX REPLACE "\n+$" "" EXPECT_ERR "${EXPECT_ERR}")
  if(NOT ERR STREQUAL EXPECT_ERR)
    message(FATAL_ERROR "stderr mismatch\\nexpected: '${EXPECT_ERR}'\\nactual: '${ERR}'")
  endif()
elseif(NOT ERR STREQUAL "")
  message(FATAL_ERROR "unexpected stderr: '${ERR}'")
endif()
