il 0.1.2
extern @rt_print_str(str) -> void
extern @rt_print_i64(i64) -> void
extern @rt_print_f64(f64) -> void
extern @rt_len(str) -> i64
extern @rt_substr(str, i64, i64) -> str
extern @rt_abs_i64(i64) -> i64
extern @rt_abs_f64(f64) -> f64
global const str @.L0 = "
"
func @main() -> i64 {
entry:
  br L10
L10:
  .loc 1 1 10
  %t0 = call @rt_abs_i64(-1)
  .loc 1 1 4
  call @rt_print_i64(%t0)
  .loc 1 1 4
  %t1 = const_str @.L0
  .loc 1 1 4
  call @rt_print_str(%t1)
  .loc 1 1 4
  br L20
L20:
  .loc 1 2 15
  %t2 = sitofp 1
  .loc 1 2 15
  %t3 = fsub %t2, 2.5
  .loc 1 2 10
  %t4 = call @rt_abs_f64(%t3)
  .loc 1 2 4
  call @rt_print_f64(%t4)
  .loc 1 2 4
  %t5 = const_str @.L0
  .loc 1 2 4
  call @rt_print_str(%t5)
  .loc 1 2 4
  br exit
exit:
  ret 0
}
