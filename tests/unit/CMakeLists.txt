# SPDX-License-Identifier: MIT
# File: tests/unit/CMakeLists.txt
# Purpose: Build standalone unit test executables.

set(VIPER_UNIT_SUPPORT_LIBS support)
set(VIPER_UNIT_SUPPORT_LIBS ${VIPER_UNIT_SUPPORT_LIBS} PARENT_SCOPE)
set(VIPER_RUNTIME_TEST_LIBS viper_runtime)
set(VIPER_RUNTIME_TEST_LIBS ${VIPER_RUNTIME_TEST_LIBS} PARENT_SCOPE)

function(viper_add_unit_support_tests)
  if(TARGET test_support)
    return()
  endif()

  viper_add_test_exe(test_support ${VIPER_TESTS_DIR}/unit/test_support.cpp)
  target_link_libraries(test_support PRIVATE ${VIPER_UNIT_SUPPORT_LIBS})
  viper_add_ctest(test_support test_support)
endfunction()

function(viper_add_runtime_tests)
  if(TARGET test_rt_string)
    return()
  endif()

  viper_add_test_exe(test_rt_string ${VIPER_TESTS_DIR}/unit/test_rt_string.cpp)
  target_link_libraries(test_rt_string PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_string test_rt_string)

  viper_add_test_exe(test_rt_string_invalid ${VIPER_TESTS_DIR}/unit/test_rt_string_invalid.cpp)
  target_link_libraries(test_rt_string_invalid PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_string_invalid test_rt_string_invalid)
  set_tests_properties(test_rt_string_invalid PROPERTIES WILL_FAIL TRUE)

  viper_add_test_exe(test_rt_conv ${VIPER_TESTS_DIR}/unit/test_rt_conv.cpp)
  target_link_libraries(test_rt_conv PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_conv test_rt_conv)

  viper_add_test_exe(test_rt_int_to_str_big ${VIPER_TESTS_DIR}/unit/test_rt_int_to_str_big.cpp)
  target_link_libraries(test_rt_int_to_str_big PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_int_to_str_big test_rt_int_to_str_big)

  viper_add_test_exe(test_rt_val_str ${VIPER_TESTS_DIR}/runtime/RTValStrTests.cpp)
  target_link_libraries(test_rt_val_str PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_val_str test_rt_val_str)

  viper_add_test_exe(test_rt_math_core ${VIPER_TESTS_DIR}/runtime/RTMathCoreTests.cpp)
  target_link_libraries(test_rt_math_core PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_math_core test_rt_math_core)

  viper_add_test_exe(test_rt_abs_i64_overflow ${VIPER_TESTS_DIR}/runtime/RTAbsI64OverflowTests.cpp)
  target_link_libraries(test_rt_abs_i64_overflow PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_abs_i64_overflow test_rt_abs_i64_overflow)

  viper_add_test_exe(test_rt_random ${VIPER_TESTS_DIR}/runtime/RTRandomTests.cpp)
  target_link_libraries(test_rt_random PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_random test_rt_random)

  viper_add_test_exe(test_rt_instr ${VIPER_TESTS_DIR}/runtime/RTInstrTests.cpp)
  target_link_libraries(test_rt_instr PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_instr test_rt_instr)

  viper_add_test_exe(test_rt_trim_case ${VIPER_TESTS_DIR}/runtime/RTTrimCaseTests.cpp)
  target_link_libraries(test_rt_trim_case PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_trim_case test_rt_trim_case)

  viper_add_test_exe(test_rt_chr_asc ${VIPER_TESTS_DIR}/runtime/RTChrAscTests.cpp)
  target_link_libraries(test_rt_chr_asc PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_chr_asc test_rt_chr_asc)

  viper_add_test_exe(test_rt_chr_invalid ${VIPER_TESTS_DIR}/runtime/RTChrInvalidTests.cpp)
  target_link_libraries(test_rt_chr_invalid PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_chr_invalid test_rt_chr_invalid)

  viper_add_test_exe(test_rt_string_ranges ${VIPER_TESTS_DIR}/runtime/RTStringRangeTests.cpp)
  target_link_libraries(test_rt_string_ranges PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_string_ranges test_rt_string_ranges)

  viper_add_test_exe(test_rt_alloc ${VIPER_TESTS_DIR}/runtime/RTAllocTests.cpp)
  target_link_libraries(test_rt_alloc PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_alloc test_rt_alloc)

  viper_add_test_exe(test_rt_alloc_zero ${VIPER_TESTS_DIR}/runtime/RTAllocZeroTests.cpp)
  target_link_libraries(test_rt_alloc_zero PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_alloc_zero test_rt_alloc_zero)

  viper_add_test_exe(test_rt_alloc_zero_fill ${VIPER_TESTS_DIR}/runtime/RTAllocZeroFillTests.cpp)
  target_link_libraries(test_rt_alloc_zero_fill PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_alloc_zero_fill test_rt_alloc_zero_fill)

  viper_add_test_exe(test_rt_array_i32 ${VIPER_TESTS_DIR}/runtime/RTArrayI32Tests.cpp)
  target_link_libraries(test_rt_array_i32 PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_array_i32 test_rt_array_i32)

  viper_add_test_exe(test_rt_array_i32_refcount ${VIPER_TESTS_DIR}/runtime/RTArrayI32RefcountTests.cpp)
  target_link_libraries(test_rt_array_i32_refcount PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_array_i32_refcount test_rt_array_i32_refcount)

  viper_add_test_exe(test_rt_input_line ${VIPER_TESTS_DIR}/runtime/RTInputLineTests.cpp)
  target_link_libraries(test_rt_input_line PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_input_line test_rt_input_line)

  viper_add_test_exe(test_rt_input_line_fail ${VIPER_TESTS_DIR}/runtime/RTInputLineFailTests.cpp)
  target_link_libraries(test_rt_input_line_fail PRIVATE ${VIPER_RUNTIME_TEST_LIBS})
  viper_add_ctest(test_rt_input_line_fail test_rt_input_line_fail)
endfunction()
